{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/app.routing.ts","webpack:///./src/app/components/page/page-edit/page-edit.component.css","webpack:///./src/app/components/page/page-edit/page-edit.component.html","webpack:///./src/app/components/page/page-edit/page-edit.component.ts","webpack:///./src/app/components/page/page-list/page-list.component.css","webpack:///./src/app/components/page/page-list/page-list.component.html","webpack:///./src/app/components/page/page-list/page-list.component.ts","webpack:///./src/app/components/page/page-new/page-new.component.css","webpack:///./src/app/components/page/page-new/page-new.component.html","webpack:///./src/app/components/page/page-new/page-new.component.ts","webpack:///./src/app/components/user/login/login.component.css","webpack:///./src/app/components/user/login/login.component.html","webpack:///./src/app/components/user/login/login.component.ts","webpack:///./src/app/components/user/profile/profile.component.css","webpack:///./src/app/components/user/profile/profile.component.html","webpack:///./src/app/components/user/profile/profile.component.ts","webpack:///./src/app/components/user/register/register.component.css","webpack:///./src/app/components/user/register/register.component.html","webpack:///./src/app/components/user/register/register.component.ts","webpack:///./src/app/components/user/user-list/user-list.component.css","webpack:///./src/app/components/user/user-list/user-list.component.html","webpack:///./src/app/components/user/user-list/user-list.component.ts","webpack:///./src/app/components/website/website-edit/website-edit.component.css","webpack:///./src/app/components/website/website-edit/website-edit.component.html","webpack:///./src/app/components/website/website-edit/website-edit.component.ts","webpack:///./src/app/components/website/website-list/website-list.component.css","webpack:///./src/app/components/website/website-list/website-list.component.html","webpack:///./src/app/components/website/website-list/website-list.component.ts","webpack:///./src/app/components/website/website-new/website-new.component.css","webpack:///./src/app/components/website/website-new/website-new.component.html","webpack:///./src/app/components/website/website-new/website-new.component.ts","webpack:///./src/app/components/widget/widget-chooser/widget-chooser.component.css","webpack:///./src/app/components/widget/widget-chooser/widget-chooser.component.html","webpack:///./src/app/components/widget/widget-chooser/widget-chooser.component.ts","webpack:///./src/app/components/widget/widget-edit/widget-edit.component.css","webpack:///./src/app/components/widget/widget-edit/widget-edit.component.html","webpack:///./src/app/components/widget/widget-edit/widget-edit.component.ts","webpack:///./src/app/components/widget/widget-edit/widget-header/widget-header.component.css","webpack:///./src/app/components/widget/widget-edit/widget-header/widget-header.component.html","webpack:///./src/app/components/widget/widget-edit/widget-header/widget-header.component.ts","webpack:///./src/app/components/widget/widget-edit/widget-image/widget-image.component.css","webpack:///./src/app/components/widget/widget-edit/widget-image/widget-image.component.html","webpack:///./src/app/components/widget/widget-edit/widget-image/widget-image.component.ts","webpack:///./src/app/components/widget/widget-edit/widget-youtube/widget-youtube.component.css","webpack:///./src/app/components/widget/widget-edit/widget-youtube/widget-youtube.component.html","webpack:///./src/app/components/widget/widget-edit/widget-youtube/widget-youtube.component.ts","webpack:///./src/app/components/widget/widget-list/widget-list.component.css","webpack:///./src/app/components/widget/widget-list/widget-list.component.html","webpack:///./src/app/components/widget/widget-list/widget-list.component.ts","webpack:///./src/app/services/admin-guard.service.ts","webpack:///./src/app/services/auth-guard.service.ts","webpack:///./src/app/services/page.service.client.ts","webpack:///./src/app/services/shared.service.client.ts","webpack:///./src/app/services/user.service.client.ts","webpack:///./src/app/services/website.service.client.ts","webpack:///./src/app/services/widget.service.client.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<router-outlet></router-outlet>\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'web-maker-assign';\n}\n","import { BrowserModule } from \"@angular/platform-browser\";\nimport { NgModule } from \"@angular/core\";\nimport { Routing } from \"./app.routing\";\nimport { HttpModule } from \"@angular/http\";\nimport {\n  FormsModule,\n  FormBuilder,\n  Validators,\n  ReactiveFormsModule\n} from \"@angular/forms\";\nimport { UserService } from \"./services/user.service.client\";\nimport { WebsiteService } from \"./services/website.service.client\";\n\nimport { AppComponent } from \"./app.component\";\nimport { LoginComponent } from \"./components/user/login/login.component\";\nimport { ProfileComponent } from \"./components/user/profile/profile.component\";\nimport { RegisterComponent } from \"./components/user/register/register.component\";\nimport { WebsiteNewComponent } from \"./components/website/website-new/website-new.component\";\nimport { WebsiteEditComponent } from \"./components/website/website-edit/website-edit.component\";\nimport { WebsiteListComponent } from \"./components/website/website-list/website-list.component\";\nimport { PageNewComponent } from \"./components/page/page-new/page-new.component\";\nimport { PageEditComponent } from \"./components/page/page-edit/page-edit.component\";\nimport { PageListComponent } from \"./components/page/page-list/page-list.component\";\nimport { WidgetChooserComponent } from \"./components/widget/widget-chooser/widget-chooser.component\";\nimport { WidgetEditComponent } from \"./components/widget/widget-edit/widget-edit.component\";\nimport { WidgetListComponent } from \"./components/widget/widget-list/widget-list.component\";\nimport { WidgetHeaderComponent } from \"./components/widget/widget-edit/widget-header/widget-header.component\";\nimport { WidgetImageComponent } from \"./components/widget/widget-edit/widget-image/widget-image.component\";\nimport { WidgetYoutubeComponent } from \"./components/widget/widget-edit/widget-youtube/widget-youtube.component\";\nimport { PageService } from \"./services/page.service.client\";\nimport { WidgetService } from \"./services/widget.service.client\";\nimport { SharedService } from \"./services/shared.service.client\";\nimport { AuthGuardSevice } from \"./services/auth-guard.service\";\nimport { UserListComponent } from \"./components/user/user-list/user-list.component\";\nimport { AdminGuardService } from \"./services/admin-guard.service\";\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    ProfileComponent,\n    RegisterComponent,\n    WebsiteNewComponent,\n    WebsiteEditComponent,\n    WebsiteListComponent,\n    PageNewComponent,\n    PageEditComponent,\n    PageListComponent,\n    WidgetChooserComponent,\n    WidgetEditComponent,\n    WidgetListComponent,\n    WidgetHeaderComponent,\n    WidgetImageComponent,\n    WidgetYoutubeComponent,\n    UserListComponent\n  ],\n  imports: [\n    BrowserModule,\n    Routing,\n    HttpModule,\n    FormsModule,\n    ReactiveFormsModule\n  ],\n  providers: [\n    UserService,\n    WebsiteService,\n    PageService,\n    WidgetService,\n    SharedService,\n    AuthGuardSevice,\n    AdminGuardService\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {}\n","import { Routes, RouterModule } from \"@angular/router\";\r\nimport { ModuleWithProviders } from \"@angular/core\";\r\nimport { LoginComponent } from \"./components/user/login/login.component\";\r\nimport { RegisterComponent } from \"./components/user/register/register.component\";\r\nimport { ProfileComponent } from \"./components/user/profile/profile.component\";\r\nimport { PageEditComponent } from \"./components/page/page-edit/page-edit.component\";\r\nimport { PageNewComponent } from \"./components/page/page-new/page-new.component\";\r\nimport { PageListComponent } from \"./components/page/page-list/page-list.component\";\r\nimport { WebsiteEditComponent } from \"./components/website/website-edit/website-edit.component\";\r\nimport { WebsiteListComponent } from \"./components/website/website-list/website-list.component\";\r\nimport { WebsiteNewComponent } from \"./components/website/website-new/website-new.component\";\r\nimport { WidgetChooserComponent } from \"./components/widget/widget-chooser/widget-chooser.component\";\r\nimport { WidgetListComponent } from \"./components/widget/widget-list/widget-list.component\";\r\nimport { WidgetEditComponent } from \"./components/widget/widget-edit/widget-edit.component\";\r\nimport { WidgetHeaderComponent } from \"./components/widget/widget-edit/widget-header/widget-header.component\";\r\nimport { WidgetImageComponent } from \"./components/widget/widget-edit/widget-image/widget-image.component\";\r\nimport { WidgetYoutubeComponent } from \"./components/widget/widget-edit/widget-youtube/widget-youtube.component\";\r\nimport { AuthGuardSevice } from \"./services/auth-guard.service\";\r\nimport { UserListComponent } from \"./components/user/user-list/user-list.component\";\r\nimport { AdminGuardService } from \"./services/admin-guard.service\";\r\n\r\nconst APP_ROUTES: Routes = [\r\n  { path: \"\", component: LoginComponent },\r\n  { path: \"login\", component: LoginComponent },\r\n  { path: \"register\", component: RegisterComponent },\r\n  {\r\n    path: \"profile\",\r\n    component: ProfileComponent,\r\n    canActivate: [AuthGuardSevice]\r\n  },\r\n  { path: \"user/:uid/website\", component: WebsiteListComponent },\r\n  //{ path: \"user/:uid/website\", component: WebsiteListComponent },\r\n  { path: \"user/:uid/website/new\", component: WebsiteNewComponent },\r\n  { path: \"user/:uid/website/:wid\", component: WebsiteEditComponent },\r\n  { path: \"user/:uid/website/:wid/page\", component: PageListComponent },\r\n  { path: \"user/:uid/website/:wid/page/new\", component: PageNewComponent },\r\n  { path: \"user/:uid/website/:wid/page/:pid\", component: PageEditComponent },\r\n  {\r\n    path: \"user/:uid/website/:wid/page/:pid/widget\",\r\n    component: WidgetListComponent\r\n  },\r\n  {\r\n    path: \"user/:uid/website/:wid/page/:pid/widget/new\",\r\n    component: WidgetChooserComponent\r\n  },\r\n  {\r\n    path: \"user/:uid/website/:wid/page/:pid/widget/:wgid\",\r\n    component: WidgetEditComponent\r\n  },\r\n  {\r\n    path: \"users\",\r\n    component: UserListComponent,\r\n    canActivate: [AdminGuardService]\r\n  }\r\n];\r\n//Export the routes as module providers\r\nexport const Routing: ModuleWithProviders = RouterModule.forRoot(APP_ROUTES);\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvcGFnZS9wYWdlLWVkaXQvcGFnZS1lZGl0LmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<!-- Navbar -->\\n<nav class=\\\"navbar navbar-light fixed-top bg-dark\\\">\\n  <a class=\\\"color-white\\\" routerLink=\\\"/user/{{uid}}/website/{{wid}}/page\\\">\\n    <i class=\\\"fas fa-chevron-left\\\"></i>\\n  </a>\\n  <div class=\\\"sw-90-width\\\">\\n    <a\\n      class=\\\"navbar-brand float-left\\\"\\n      routerLink=\\\"/user/{{uid}}/website/{{wid}}/page/new\\\"\\n    >\\n      <b class=\\\"color-white\\\">Edit page</b>\\n    </a>\\n  </div>\\n  <button\\n    type=\\\"submit\\\"\\n    form=\\\"myUpForm\\\"\\n    class=\\\"color-white float-right btn bg-transparent\\\"\\n    [disabled]=\\\"myUpForm.invalid\\\"\\n  >\\n    <i class=\\\"fas fa-check\\\"></i>\\n  </button>\\n  <!--\\n      <a class=\\\"color-white\\\" routerLink=\\\"/user/{{uid}}/website/{{wid}}page\\\">\\n      <i class=\\\"fas fa-check\\\"></i>\\n    </a>\\n  -->\\n</nav>\\n<!-- Pages List -->\\n<br /><br />\\n<div class=\\\"container-fluid\\\">\\n  <form\\n    class=\\\"form-style\\\"\\n    id=\\\"myUpForm\\\"\\n    (ngSubmit)=\\\"update()\\\"\\n    #myUpForm=\\\"ngForm\\\"\\n  >\\n    <div *ngIf=\\\"error_form\\\" class=\\\"alert alert-danger\\\">\\n      Name and Title are required!!\\n    </div>\\n    <!-- Name -->\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"name\\\"><b>Name</b></label>\\n      <input\\n        type=\\\"text\\\"\\n        name=\\\"name\\\"\\n        class=\\\"form-control\\\"\\n        placeholder=\\\"Name of the page...\\\"\\n        [(ngModel)]=\\\"page.name\\\"\\n        required\\n      />\\n    </div>\\n    <!-- Title -->\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"title\\\"><b>Title</b></label>\\n      <input\\n        type=\\\"text\\\"\\n        name=\\\"title\\\"\\n        class=\\\"form-control\\\"\\n        placeholder=\\\"Page title\\\"\\n        [(ngModel)]=\\\"page.title\\\"\\n        required\\n      />\\n    </div>\\n    <div>\\n      <button type=\\\"button\\\" class=\\\"btn btn-danger btn-block\\\" (click)=\\\"delete()\\\">\\n        Delete\\n      </button>\\n      <!--\\n        <a routerLink=\\\"/user/{{uid}}/website/{{wid}}/page\\\" class=\\\"btn btn-danger btn-block\\\">Delete</a>\\n      -->\\n      <a\\n        routerLink=\\\"/user/{{uid}}/website/{{wid}}/page\\\"\\n        class=\\\"btn btn-warning btn-block\\\"\\n        >Cancel</a\\n      >\\n    </div>\\n  </form>\\n</div>\\n<!-- Footer -->\\n<footer class=\\\"navbar navbar-light fixed-bottom bg-dark\\\">\\n  <!-- Navbar content -->\\n  <div class=\\\"full-width\\\">\\n    <a class=\\\"color-white float-right\\\" routerLink=\\\"/user/{{uid}}\\\"\\n      ><i class=\\\"fas fa-user\\\"></i\\n    ></a>\\n  </div>\\n</footer>\\n\"","import { Component, OnInit } from \"@angular/core\";\nimport { PageService } from \"src/app/services/page.service.client\";\nimport { Router, ActivatedRoute } from \"@angular/router\";\nimport { Page } from \"src/app/models/page.model.client\";\n\n@Component({\n  selector: \"app-page-edit\",\n  templateUrl: \"./page-edit.component.html\",\n  styleUrls: [\"./page-edit.component.css\"]\n})\nexport class PageEditComponent implements OnInit {\n  uid: string;\n  wid: string;\n  pid: string;\n  page: Page = { name: \"\", title: \"\", websiteId: \"\" };\n\n  error_form: boolean;\n  constructor(\n    private pageservice: PageService,\n    private router: Router,\n    private activatedroute: ActivatedRoute\n  ) {}\n\n  ngOnInit() {\n    this.activatedroute.params.subscribe(params => {\n      (this.uid = params[\"uid\"]),\n        (this.wid = params[\"wid\"]),\n        (this.pid = params[\"pid\"]),\n        this,\n        this.pageservice.findPageById(this.pid).subscribe((page: Page) => {\n          this.page = page;\n        });\n    });\n  }\n  //Update a page\n  update() {\n    this.pageservice.updatePage(this.page).subscribe(\n      (up: any) => {\n        this.router.navigate([\n          \"user/\" + this.uid + \"/website/\" + this.wid + \"/page\"\n        ]);\n      },\n      (error: any) => {\n        this.error_form = true;\n      }\n    );\n  }\n  //Delete a page\n  delete() {\n    this.pageservice.deletePage(this.pid).subscribe((del: any) => {\n      this.router.navigate([\n        \"user/\" + this.uid + \"/website/\" + this.wid + \"/page\"\n      ]);\n    });\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvcGFnZS9wYWdlLWxpc3QvcGFnZS1saXN0LmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<!-- Navbar -->\\n<nav class=\\\"navbar navbar-light fixed-top bg-dark\\\">\\n  <a class=\\\"color-white\\\" routerLink=\\\"/user/{{uid}}/website\\\">\\n    <i class=\\\"fas fa-chevron-left\\\"></i>\\n  </a>\\n  <div class=\\\"sw-90-width\\\">\\n    <a\\n      class=\\\"navbar-brand float-left\\\"\\n      routerLink=\\\"/user/{{uid}}/website/{{wid}}/page\\\"\\n    >\\n      <b class=\\\"color-white\\\">Pages</b>\\n    </a>\\n  </div>\\n  <a class=\\\"color-white\\\" routerLink=\\\"/user/{{uid}}/website/{{wid}}/page/new\\\">\\n    <i class=\\\"fas fa-plus\\\"></i>\\n  </a>\\n</nav>\\n<!-- Pages List -->\\n<br /><br />\\n<div class=\\\"container div-backgound\\\">\\n  <ul class=\\\"list-group\\\">\\n    <li class=\\\"list-group-item\\\" *ngFor=\\\"let page of pages\\\">\\n      <a routerLink=\\\"/user/{{uid}}/website/{{wid}}/page/{{page._id}}/widget\\\">{{\\n        page.name\\n      }}</a>\\n      <a\\n        routerLink=\\\"/user/{{uid}}/website/{{wid}}/page/{{page._id}}\\\"\\n        class=\\\"float-right\\\"\\n        title=\\\"Edit\\\"\\n      >\\n        <i class=\\\"fas fa-cog\\\"></i>\\n      </a>\\n    </li>\\n  </ul>\\n</div>\\n<!-- Footer -->\\n<footer class=\\\"navbar navbar-light fixed-bottom bg-dark\\\">\\n  <!-- Navbar content -->\\n  <div class=\\\"full-width\\\">\\n    <a class=\\\"color-white float-right\\\" routerLink=\\\"/user/{{uid}}\\\"\\n      ><i class=\\\"fas fa-user\\\"></i\\n    ></a>\\n  </div>\\n</footer>\\n\"","import { Component, OnInit } from \"@angular/core\";\nimport { PageService } from \"src/app/services/page.service.client\";\nimport { Page } from \"src/app/models/page.model.client\";\nimport { Router, ActivatedRoute } from \"@angular/router\";\n\n@Component({\n  selector: \"app-page-list\",\n  templateUrl: \"./page-list.component.html\",\n  styleUrls: [\"./page-list.component.css\"]\n})\nexport class PageListComponent implements OnInit {\n  uid: string;\n  wid: string;\n  page: Page;\n  pages: Page[];\n  constructor(\n    private pageservice: PageService,\n    private activatedroute: ActivatedRoute,\n    private router: Router\n  ) {}\n\n  ngOnInit() {\n    this.activatedroute.params.subscribe(params => {\n      (this.uid = params[\"uid\"]),\n        (this.wid = params[\"wid\"]),\n        this.pageservice\n          .findPagesByWebsiteId(this.wid)\n          .subscribe((pages: Page[]) => {\n            this.pages = pages;\n            console.log(this.pages);\n          });\n    });\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvcGFnZS9wYWdlLW5ldy9wYWdlLW5ldy5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<!-- Navbar -->\\n<nav class=\\\"navbar navbar-light fixed-top bg-dark\\\">\\n  <a class=\\\"color-white\\\" routerLink=\\\"/user/{{uid}}/website/{{wid}}/page\\\">\\n    <i class=\\\"fas fa-chevron-left\\\"></i>\\n  </a>\\n  <div class=\\\"sw-90-width\\\">\\n    <a\\n      class=\\\"navbar-brand float-left\\\"\\n      routerLink=\\\"/user/{{uid}}/website/{{wid}}/page\\\"\\n    >\\n      <b class=\\\"color-white\\\">New page</b>\\n    </a>\\n  </div>\\n  <a class=\\\"color-white\\\" routerLink=\\\"/user/{{uid}}/website/{{wid}}/page\\\">\\n    <i class=\\\"fas fa-check\\\"></i>\\n  </a>\\n</nav>\\n<!-- Pages List -->\\n<br /><br />\\n<div class=\\\"container-fluid\\\">\\n  <form\\n    class=\\\"form-style\\\"\\n    id=\\\"myAddForm\\\"\\n    (ngSubmit)=\\\"add()\\\"\\n    #myAddForm=\\\"ngForm\\\"\\n  >\\n    <div *ngIf=\\\"error_form\\\" class=\\\"alert alert-danger\\\">\\n      Name and Title are required!!\\n    </div>\\n    <!-- Name -->\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"name\\\"><b>Name</b></label>\\n      <input\\n        type=\\\"text\\\"\\n        name=\\\"name\\\"\\n        class=\\\"form-control\\\"\\n        placeholder=\\\"Name\\\"\\n        [(ngModel)]=\\\"page.name\\\"\\n        required\\n      />\\n    </div>\\n    <!-- Title -->\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"title\\\"><b>Title</b></label>\\n      <input\\n        type=\\\"text\\\"\\n        name=\\\"title\\\"\\n        class=\\\"form-control\\\"\\n        placeholder=\\\"Page title\\\"\\n        [(ngModel)]=\\\"page.title\\\"\\n        required\\n      />\\n    </div>\\n\\n    <div>\\n      <button\\n        type=\\\"submit\\\"\\n        class=\\\"btn btn-primary btn-block\\\"\\n        form=\\\"myAddForm\\\"\\n        [disabled]=\\\"myAddForm.invalid\\\"\\n      >\\n        Submit\\n      </button>\\n      <!--\\n        <a routerLink=\\\"/user/{{uid}}/website/{{wid}}/page\\\" class=\\\"btn btn-primary btn-block\\\">Submit</a>\\n      -->\\n      <a\\n        routerLink=\\\"/user/{{uid}}/website/{{wid}}/page\\\"\\n        class=\\\"btn btn-danger btn-block \\\"\\n        >Cancel</a\\n      >\\n    </div>\\n  </form>\\n</div>\\n<!-- Footer -->\\n<footer class=\\\"navbar navbar-light fixed-bottom bg-dark\\\">\\n  <!-- Navbar content -->\\n  <div class=\\\"full-width\\\">\\n    <a class=\\\"color-white float-right\\\" routerLink=\\\"/user/{{uid}}\\\"\\n      ><i class=\\\"fas fa-user\\\"></i\\n    ></a>\\n  </div>\\n</footer>\\n\"","import { Component, OnInit } from \"@angular/core\";\nimport { Page } from \"src/app/models/page.model.client\";\nimport { PageService } from \"src/app/services/page.service.client\";\nimport { Router, ActivatedRoute } from \"@angular/router\";\n\n@Component({\n  selector: \"app-page-new\",\n  templateUrl: \"./page-new.component.html\",\n  styleUrls: [\"./page-new.component.css\"]\n})\nexport class PageNewComponent implements OnInit {\n  uid: string;\n  wid: string;\n  page: Page = { name: \"\", title: \"\", websiteId: \"\" };\n  name: string;\n  title: string;\n  pages: Page[];\n  error_form: boolean;\n\n  constructor(\n    private pageservice: PageService,\n    private router: Router,\n    private activatedroute: ActivatedRoute\n  ) {}\n\n  ngOnInit() {\n    this.activatedroute.params.subscribe(params => {\n      (this.uid = params[\"uid\"]), (this.wid = params[\"wid\"]);\n    });\n  }\n  add() {\n    this.page.websiteId = this.wid;\n    this.pageservice.createPage(this.page).subscribe(\n      (create: any) => {\n        this.router.navigate([\"user\", this.uid, \"website\", this.wid, \"page\"]);\n      },\n      (error: any) => (this.error_form = true)\n    );\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvdXNlci9sb2dpbi9sb2dpbi5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div class=\\\"container\\\">\\n  <form class=\\\"form-style\\\" (ngSubmit)=\\\"login()\\\" #myLoginForm=\\\"ngForm\\\">\\n    <h3 class=\\\"form-style-heading\\\">Login</h3>\\n    <hr />\\n    <br />\\n    <div *ngIf=\\\"error_flag\\\" class=\\\"alert alert-danger\\\">Invalid User!!</div>\\n    <div class=\\\"form-group\\\">\\n      <input\\n        type=\\\"text\\\"\\n        #userInput=\\\"ngModel\\\"\\n        required\\n        id=\\\"username\\\"\\n        name=\\\"username\\\"\\n        class=\\\"form-control\\\"\\n        placeholder=\\\"username\\\"\\n        [(ngModel)]=\\\"username\\\"\\n      />\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <input\\n        type=\\\"password\\\"\\n        #pwdInput=\\\"ngModel\\\"\\n        required\\n        id=\\\"password\\\"\\n        name=\\\"password\\\"\\n        class=\\\"form-control\\\"\\n        placeholder=\\\"password\\\"\\n        [(ngModel)]=\\\"password\\\"\\n      />\\n    </div>\\n\\n    <div\\n      *ngIf=\\\"userInput.invalid && userInput.submited\\\"\\n      class=\\\"alert alert-danger\\\"\\n    >\\n      Username is required!!\\n    </div>\\n    <div\\n      *ngIf=\\\"pwdInput.invalid && pwdInput.touched\\\"\\n      class=\\\"alert alert-danger\\\"\\n    >\\n      Password is required!!\\n    </div>\\n    <div>\\n      <button\\n        class=\\\"btn btn-primary btn-block\\\"\\n        type=\\\"submit\\\"\\n        [disabled]=\\\"myLoginForm.invalid\\\"\\n      >\\n        Login\\n      </button>\\n      <!--\\n        <a routerLink=\\\"/user/:uid\\\" class=\\\"btn btn-primary btn-block\\\">Login</a>\\n      -->\\n      <a routerLink=\\\"/register\\\" class=\\\"btn btn-success btn-block\\\">Register</a>\\n    </div>\\n  </form>\\n</div>\\n\"","import { Component, OnInit } from \"@angular/core\";\nimport { UserService } from \"src/app/services/user.service.client\";\nimport { NgModule } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport { FormsModule } from \"@angular/forms\";\nimport { User } from \"src/app/models/user.model.client\";\nimport { SharedService } from \"src/app/services/shared.service.client\";\n\n@Component({\n  selector: \"app-login\",\n  templateUrl: \"./login.component.html\",\n  styleUrls: [\"./login.component.css\"]\n})\nexport class LoginComponent implements OnInit {\n  constructor(\n    private userservice: UserService,\n    private router: Router,\n    private sharedservice: SharedService\n  ) {}\n  error_flag = false;\n  username = \"\";\n  password = \"\";\n\n  ngOnInit() {\n    this.error_flag = false;\n  }\n  /*login() {\n    this.userservice\n      .findUserByCredentials(this.username, this.password)\n      .subscribe(\n        (user: User) => {\n          if (!user) {\n            this.error_flag = true;\n          } else {\n            this.error_flag = false;\n            this.router.navigate([\"/user/\" + user._id]);\n          }\n        },\n        (error: any) => {\n          this.error_flag = true;\n        }\n      );\n  }\n*/\n  login() {\n    // calling client side userservice to send login information\n    console.log(\"data\", this.password);\n    this.userservice.login(this.username, this.password).subscribe(\n      (data: any) => {\n        this.sharedservice.user = data;\n        this.router.navigate([\"/profile\"]);\n        //this.router.navigate([\"/user/\" + user._id]);\n      },\n      (error: any) => {\n        this.error_flag = true;\n      }\n    );\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvdXNlci9wcm9maWxlL3Byb2ZpbGUuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<!-- Navbar -->\\n<nav class=\\\"navbar navbar-dark bg-dark fixed-top\\\">\\n  <a class=\\\"navbar-brand\\\" routerLink=\\\"/user/{{uid}}\\\"><b>Profile</b></a>\\n  <!--\\n    <a class=\\\"color-white\\\" routerLink=\\\"user/:uid\\\">\\n      <i class=\\\"fas fa-check\\\"></i>\\n    </a>\\n  -->\\n  <button\\n    type=\\\"submit\\\"\\n    class=\\\"btn bg-transparent color-white\\\"\\n    form=\\\"myProfilFom\\\"\\n    [disabled]=\\\"myProfilFom.invalid\\\"\\n  >\\n    <i class=\\\"fas fa-check\\\"></i>\\n  </button>\\n</nav>\\n<!-- Form profile -->\\n<div class=\\\"container\\\">\\n  <form\\n    class=\\\"form-style\\\"\\n    (ngSubmit)=\\\"update()\\\"\\n    id=\\\"myProfilFom\\\"\\n    #myProfilFom=\\\"ngForm\\\"\\n  >\\n    <div *ngIf=\\\"userError\\\" class=\\\"alert alert-danger\\\">\\n      This username is taken, please try another one.\\n    </div>\\n    <div *ngIf=\\\"successFlag\\\" class=\\\"alert alert-success\\\">\\n      Update Successfully\\n    </div>\\n    <fieldset>\\n      <legend class=\\\"text-center\\\">Profile</legend>\\n      <!-- Username -->\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"userName\\\"><b>Username</b></label>\\n        <input\\n          type=\\\"text\\\"\\n          #userInput=\\\"ngModel\\\"\\n          required\\n          id=\\\"username\\\"\\n          name=\\\"username\\\"\\n          class=\\\"form-control\\\"\\n          placeholder=\\\"jannuzi\\\"\\n          [(ngModel)]=\\\"user.username\\\"\\n        />\\n      </div>\\n      <div\\n        *ngIf=\\\"userInput.invalid && userInput.touched\\\"\\n        class=\\\"alert alert-danger\\\"\\n      >\\n        Username can't be empty\\n      </div>\\n      <!-- Email -->\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"email\\\"><b>Email</b></label>\\n        <input\\n          type=\\\"email\\\"\\n          name=\\\"email\\\"\\n          #emailInput=\\\"ngModel\\\"\\n          class=\\\"form-control\\\"\\n          placeholder=\\\"jannizi@gmail.com\\\"\\n          [(ngModel)]=\\\"user.email\\\"\\n          pattern=\\\"[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,3}$\\\"\\n        />\\n      </div>\\n      <div\\n        *ngIf=\\\"emailInput.invalid && emailInput.touched\\\"\\n        class=\\\"alert alert-danger\\\"\\n      >\\n        Invalid Email\\n      </div>\\n      <!-- First name -->\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"firstName\\\"><b>First name</b></label>\\n        <input\\n          type=\\\"text\\\"\\n          id=\\\"firstName\\\"\\n          name=\\\"firstName\\\"\\n          class=\\\"form-control\\\"\\n          placeholder=\\\"Jose\\\"\\n          [(ngModel)]=\\\"user.firstName\\\"\\n        />\\n      </div>\\n      <!-- Last name -->\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"lastName\\\"><b>Last name</b></label>\\n        <input\\n          type=\\\"text\\\"\\n          id=\\\"lastName\\\"\\n          name=\\\"lastName\\\"\\n          class=\\\"form-control\\\"\\n          placeholder=\\\"Annuziato\\\"\\n          [(ngModel)]=\\\"user.lastName\\\"\\n        />\\n      </div>\\n      <div>\\n        <a routerLink=\\\"/user/{{uid}}/website\\\" class=\\\"btn btn-primary btn-block \\\"\\n          >Websites</a\\n        >\\n\\n        <button\\n          type=\\\"button\\\"\\n          (click)=\\\"logout()\\\"\\n          class=\\\"btn btn-danger btn-block\\\"\\n        >\\n          Logouttt\\n        </button>\\n\\n        <button\\n          *ngIf=\\\"user.admin\\\"\\n          type=\\\"button\\\"\\n          routerLink=\\\"/users\\\"\\n          class=\\\"btn btn-outline-dark btn-block\\\"\\n        >\\n          Check Users\\n        </button>\\n      </div>\\n    </fieldset>\\n  </form>\\n</div>\\n<!-- Footer -->\\n<footer class=\\\"navbar navbar-dark bg-dark fixed-bottom\\\">\\n  <!-- Navbar content -->\\n  <div class=\\\"full-width\\\">\\n    <a class=\\\"color-white float-right\\\" routerLink=\\\"/profile\\\">\\n      <i class=\\\"fas fa-user\\\"></i>\\n    </a>\\n  </div>\\n</footer>\\n\"","import { Component, OnInit } from \"@angular/core\";\nimport { NgModule } from \"@angular/core\";\nimport { Router, ActivatedRoute } from \"@angular/router\";\nimport { UserService } from \"src/app/services/user.service.client\";\nimport { FormsModule } from \"@angular/forms\";\nimport { Http, Response } from \"@angular/http\";\nimport { map } from \"rxjs/operators\";\nimport { User } from \"src/app/models/user.model.client\";\nimport { SharedService } from \"src/app/services/shared.service.client\";\n\n@Component({\n  selector: \"app-profile\",\n  templateUrl: \"./profile.component.html\",\n  styleUrls: [\"./profile.component.css\"]\n})\nexport class ProfileComponent implements OnInit {\n  uid: string;\n  oldUsername: string;\n  user: User = {\n    username: \"\",\n    password: \"\",\n    firstName: \"\",\n    lastName: \"\",\n    email: \"\"\n  };\n  userError: boolean;\n  successFlag: boolean;\n  constructor(\n    private router: Router,\n    private userservice: UserService,\n    private activerouter: ActivatedRoute,\n    private sharedservice: SharedService\n  ) {}\n  //Initilize the form\n  ngOnInit() {\n    this.user = this.sharedservice.user;\n    this.oldUsername = this.user._id;\n    /*this.activerouter.params.subscribe(params => {\n      (this.uid = params[\"uid\"]), console.log(this.uid);\n      this.userservice.findUserById(this.uid).subscribe((user: User) => {\n        (this.user = user), (this.oldUsername = this.user._id);\n      });\n    });*/\n\n    //this.userservice.findUserById()\n  }\n  //Update the user\n  update() {\n    if (this.user._id == this.oldUsername) {\n      this.userservice.updateUser(this.user).subscribe((user: User) => {\n        this.userError = false;\n        this.successFlag = true;\n      });\n    } else {\n      this.userservice.findUserById(this.user._id).subscribe(\n        (user: User) => {\n          this.userError = true;\n          this.successFlag = false;\n        },\n        (error: any) => {\n          this.userservice.updateUser(this.user).subscribe((user: User) => {\n            this.userError = false;\n            this.successFlag = true;\n          });\n        }\n      );\n    }\n  }\n\n  logout() {\n    this.userservice.logout().subscribe((data: any) => {\n      this.router.navigate([\"login\"]);\n    });\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvdXNlci9yZWdpc3Rlci9yZWdpc3Rlci5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<!-- Form register -->\\n<div class=\\\"container\\\">\\n  <form\\n    [formGroup]=\\\"register_Form\\\"\\n    class=\\\"form-style\\\"\\n    (ngSubmit)=\\\"register()\\\"\\n    #myRegForm=\\\"ngForm\\\"\\n  >\\n    <div *ngIf=\\\"user_error\\\" class=\\\"alert alert-danger\\\">\\n      This username exist!!\\n    </div>\\n    <div *ngIf=\\\"pwd_error\\\" class=\\\"alert alert-danger\\\">\\n      The verify password is different d'un password!!\\n    </div>\\n    <fieldset>\\n      <legend class=\\\"text-center\\\">Register</legend>\\n      <div class=\\\"form-group\\\">\\n        <input\\n          type=\\\"text\\\"\\n          class=\\\"form-control\\\"\\n          placeholder=\\\"username\\\"\\n          formControlName=\\\"username\\\"\\n        />\\n      </div>\\n      <!--\\n        <div *ngIf=\\\"submitted && f.username.errors.required\\\" class=\\\"alert alert-danger\\\">Username is required!!</div>\\n      -->\\n\\n      <div *ngIf=\\\"submitted && !f.username.valid\\\" class=\\\"alert alert-danger\\\">\\n        Username is required\\n      </div>\\n\\n      <div class=\\\"form-group\\\">\\n        <input\\n          type=\\\"password\\\"\\n          class=\\\"form-control\\\"\\n          placeholder=\\\"password\\\"\\n          formControlName=\\\"password\\\"\\n        />\\n      </div>\\n      <div *ngIf=\\\"submitted && !f.password.valid\\\" class=\\\"alert alert-danger\\\">\\n        Password is required\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <input\\n          type=\\\"password\\\"\\n          class=\\\"form-control\\\"\\n          placeholder=\\\"verify password\\\"\\n          formControlName=\\\"verifPassword\\\"\\n        />\\n      </div>\\n      <div\\n        *ngIf=\\\"submitted && !f.verifPassword.valid\\\"\\n        class=\\\"alert alert-danger\\\"\\n      >\\n        verify password is required\\n      </div>\\n      <div>\\n        <!--\\n          <a routerLink=\\\"/user/:uid\\\" href=\\\"profile.html\\\" class=\\\"btn btn-primary btn-block \\\">Register</a>\\n        -->\\n        <button\\n          class=\\\"btn btn-primary btn-block\\\"\\n          type=\\\"submit\\\"\\n          [disabled]=\\\"myRegForm.invalid\\\"\\n        >\\n          Register\\n        </button>\\n        <a routerLink=\\\"/login\\\" class=\\\"btn btn-danger btn-block\\\">Cancel</a>\\n      </div>\\n    </fieldset>\\n  </form>\\n</div>\\n\"","import { Component, OnInit } from \"@angular/core\";\nimport {\n  FormsModule,\n  FormGroup,\n  FormBuilder,\n  Validators\n} from \"@angular/forms\";\nimport { UserService } from \"src/app/services/user.service.client\";\nimport { Router } from \"@angular/router\";\nimport { NgModule } from \"@angular/core\";\nimport { concat } from \"rxjs\";\nimport { User } from \"src/app/models/user.model.client\";\nimport { SharedService } from \"src/app/services/shared.service.client\";\n\n@Component({\n  selector: \"app-register\",\n  templateUrl: \"./register.component.html\",\n  styleUrls: [\"./register.component.css\"]\n})\nexport class RegisterComponent implements OnInit {\n  user_error: boolean;\n  pwd_error: boolean;\n  register_Form: FormGroup;\n  submitted = false;\n\n  constructor(\n    private userservice: UserService,\n    private router: Router,\n    private formBuilder: FormBuilder,\n    private sharedservice: SharedService\n  ) {}\n\n  ngOnInit() {\n    this.register_Form = this.formBuilder.group({\n      username: [\"\", Validators.required],\n      password: [\"\", Validators.required],\n      verifPassword: [\"\", Validators.required]\n    });\n  }\n  get f() {\n    return this.register_Form.controls;\n  }\n  register() {\n    console.log(\"ddddd0\");\n    this.submitted = true;\n    //console.log(this.register_Form.value);\n    if (this.register_Form.invalid) {\n      return;\n    }\n    const username = this.register_Form.value[\"username\"];\n    const password = this.register_Form.value[\"password\"];\n    const verifPassword = this.register_Form.value[\"verifPassword\"];\n    console.log(\"111\");\n    if (password === verifPassword) {\n      //const user: User = this.userservice.findUserByUsername(username);\n      this.userservice.findUserByUsername(username).subscribe((user: User) => {\n        if (!user) {\n          /*let newUser = {\n            username: username,\n            password: password,\n            verifPassword: verifPassword\n          };*/\n          this.user_error = false;\n          const newUser: User = {\n            username: username,\n            password: password,\n            firstName: \"\",\n            lastName: \"\",\n            email: \"\"\n          };\n\n          this.userservice.register(newUser).subscribe((user: User) => {\n            this.sharedservice.user = user;\n            //this.router.navigate([\"user\", user._id]);\n            this.router.navigate([\"profile\"]);\n          });\n        } else {\n          this.user_error = true;\n          this.pwd_error = false;\n        }\n      });\n    } else {\n      this.pwd_error = true;\n      this.user_error = false;\n    }\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvdXNlci91c2VyLWxpc3QvdXNlci1saXN0LmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<p>\\n  user-list works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-user-list',\n  templateUrl: './user-list.component.html',\n  styleUrls: ['./user-list.component.css']\n})\nexport class UserListComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvd2Vic2l0ZS93ZWJzaXRlLWVkaXQvd2Vic2l0ZS1lZGl0LmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<!-- Navbar -->\\n<nav class=\\\"navbar navbar-dark bg-dark fixed-top row nav-height\\\">\\n  <!-- Left Nav -->\\n  <div class=\\\"col-4 d-none d-sm-block\\\">\\n    <a class=\\\"color-white\\\" routerLink=\\\"/user/{{uid}}/website\\\">\\n      <i class=\\\"fas fa-chevron-left\\\"></i>\\n    </a>\\n    <a\\n      class=\\\"color-white padding-left\\\"\\n      routerLink=\\\"/user/{{uid}}/website/{{wid}}\\\"\\n    >\\n      <h5 class=\\\"display-inline a-color\\\">Websites</h5>\\n    </a>\\n    <a routerLink=\\\"/user/{{uid}}/website/new\\\" class=\\\"color-white float-right\\\">\\n      <i class=\\\"fas fa-plus\\\"></i>\\n    </a>\\n  </div>\\n  <!-- Right Nav -->\\n  <div class=\\\"col-sm-8\\\">\\n    <a routerLink=\\\"/user/{{uid}}/website\\\" class=\\\"color-white d-sm-none\\\">\\n      <i class=\\\"fas fa-chevron-left\\\"></i>\\n    </a>\\n    <a\\n      class=\\\"color-white padding-left\\\"\\n      routerLink=\\\"/user/{{uid}}/website/{{wid}}\\\"\\n    >\\n      <h5 class=\\\"display-inline a-color\\\">Edit Website</h5>\\n    </a>\\n    <button\\n      [disabled]=\\\"myUpForm.invalid\\\"\\n      type=\\\"submit\\\"\\n      class=\\\"color-white float-right btn bg-transparent\\\"\\n      form=\\\"myUpForm\\\"\\n    >\\n      <i class=\\\"fas fa-check\\\"></i>\\n    </button>\\n    <!--\\n      <a routerLink=\\\"/user/:uid/website\\\" class=\\\"color-white float-right\\\">\\n        <i class=\\\"fas fa-check\\\"></i>\\n      </a>\\n    -->\\n  </div>\\n</nav>\\n<!-- list and form -->\\n<div class=\\\"row container-fluid\\\">\\n  <!-- Left list -->\\n  <div class=\\\"col-4 d-none d-sm-block\\\">\\n    <div class=\\\"container div-backgound\\\">\\n      <ul class=\\\"list-group\\\">\\n        <li class=\\\"list-group-item\\\" *ngFor=\\\"let website of websites\\\">\\n          <a routerLink=\\\"/user/{{uid}}/website/{{website._id}}/page\\\">\\n            {{ website.name }}\\n          </a>\\n          <a\\n            routerLink=\\\"/user/{{uid}}/website/{{website._id}}\\\"\\n            class=\\\"float-right\\\"\\n            title=\\\"Edit\\\"\\n          >\\n            <i class=\\\"fas fa-cog\\\"></i>\\n          </a>\\n        </li>\\n      </ul>\\n    </div>\\n  </div>\\n  <!-- Right form -->\\n  <div class=\\\"col-sm-8\\\">\\n    <div class=\\\"container-fluid div-backgound\\\">\\n      <form (ngSubmit)=\\\"updateWebsite()\\\" id=\\\"myUpForm\\\" #myUpForm=\\\"ngForm\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"name\\\"><b>Name</b></label>\\n          <input\\n            type=\\\"text\\\"\\n            id=\\\"name\\\"\\n            name=\\\"name\\\"\\n            class=\\\"form-control\\\"\\n            placeholder=\\\"Name\\\"\\n            [(ngModel)]=\\\"website.name\\\"\\n            #nameInput=\\\"ngModel\\\"\\n          />\\n        </div>\\n        <div\\n          *ngIf=\\\"nameInput.invalid && nameInput.touched\\\"\\n          class=\\\"alert alert-danger\\\"\\n        >\\n          Name is required\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"description\\\"><b>Description</b></label>\\n          <textarea\\n            type=\\\"text\\\"\\n            class=\\\"form-control\\\"\\n            id=\\\"description\\\"\\n            name=\\\"description\\\"\\n            rows=\\\"5\\\"\\n            placeholder=\\\"Describe you website\\\"\\n            [(ngModel)]=\\\"website.description\\\"\\n            #descInput=\\\"ngModel\\\"\\n          ></textarea>\\n        </div>\\n        <div\\n          *ngIf=\\\"descInput.invalid && descInput.touched\\\"\\n          class=\\\"alert alert-danger\\\"\\n        >\\n          Name is required\\n        </div>\\n        <div class=\\\"float-right\\\">\\n          <button\\n            type=\\\"button\\\"\\n            class=\\\"btn btn-danger\\\"\\n            (click)=\\\"deleteWebsite()\\\"\\n          >\\n            Delete\\n          </button>\\n          <!--\\n            <a routerLink=\\\"/user/{{uid}}/website\\\" class=\\\"btn btn-danger\\\">Delete</a>\\n          -->\\n          <a routerLink=\\\"/user/{{uid}}/website\\\" class=\\\"btn btn-warning\\\"\\n            >Cancel</a\\n          >\\n        </div>\\n      </form>\\n    </div>\\n  </div>\\n\\n  <!-- Footer -->\\n  <footer class=\\\"navbar navbar-dark bg-dark fixed-bottom\\\">\\n    <!-- Navbar content -->\\n    <div class=\\\"full-width\\\">\\n      <a class=\\\"color-white float-right\\\" routerLink=\\\"/user/{{uid}}\\\"\\n        ><i class=\\\"fas fa-user\\\"></i\\n      ></a>\\n    </div>\\n  </footer>\\n</div>\\n\"","import { Component, OnInit } from \"@angular/core\";\nimport { WebsiteService } from \"src/app/services/website.service.client\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { Website } from \"src/app/models/website.model.client\";\n\n@Component({\n  selector: \"app-website-edit\",\n  templateUrl: \"./website-edit.component.html\",\n  styleUrls: [\"./website-edit.component.css\"]\n})\nexport class WebsiteEditComponent implements OnInit {\n  uid: string;\n  wid: string;\n  website: Website = {\n    name: \"\",\n    description: \"\",\n    developerId: \"\"\n  };\n  websites: Website[];\n  constructor(\n    private websiteservice: WebsiteService,\n    private router: Router,\n    private activatedroute: ActivatedRoute\n  ) {}\n\n  ngOnInit() {\n    this.activatedroute.params.subscribe(params => {\n      this.uid = params[\"uid\"];\n      this.wid = params[\"wid\"];\n      this.websiteservice\n        .findWebsitesByUser(this.uid)\n        .subscribe((websites: Website[]) => {\n          this.websites = websites;\n        });\n      this.websiteservice\n        .findWebsiteById(this.wid)\n        .subscribe((website: Website) => {\n          this.website = website;\n          console.log(this.websites);\n        });\n    });\n  }\n  //Update a website\n  updateWebsite() {\n    console.log(this.website);\n    this.websiteservice\n      .updateWebsite(this.website)\n      .subscribe((website: Website) => {\n       // console.log(\"dfgdfgdfgdfg\");\n        this.router.navigate([\"/user/\" + this.uid + \"/website\"]);\n      });\n  }\n  //Delete a website\n  deleteWebsite() {\n    this.websiteservice\n      .deleteWebsite(this.wid)\n      .subscribe((websites: Website[]) => {\n        this.router.navigate([\"user\", this.uid, \"website\"]);\n      });\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvd2Vic2l0ZS93ZWJzaXRlLWxpc3Qvd2Vic2l0ZS1saXN0LmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<!-- Navbar -->\\n<nav class=\\\"navbar fixed-top navbar-dark bg-dark\\\">\\n  <a class=\\\"color-white\\\" routerLink=\\\"/user/{{uid}}\\\">\\n    <i class=\\\"fas fa-chevron-left\\\"></i>\\n  </a>\\n  <div class=\\\"sw-90-width\\\">\\n    <a class=\\\"navbar-brand float-left\\\" routerLink=\\\"/user/{{uid}}/website\\\">\\n      <b>Websites</b>\\n    </a>\\n  </div>\\n  <a class=\\\"color-white\\\" routerLink=\\\"/user/{{uid}}/website/new\\\">\\n    <i class=\\\"fas fa-plus\\\"></i>\\n  </a>\\n</nav>\\n<br /><br />\\n<!-- Website List -->\\n<div class=\\\"container div-backgound\\\">\\n  <ul class=\\\"list-group\\\">\\n    <li class=\\\"list-group-item\\\" *ngFor=\\\"let website of websites\\\">\\n      <a routerLink=\\\"/user/{{uid}}/website/{{website._id}}/page\\\">\\n        {{ website.name }}\\n      </a>\\n      <a\\n        routerLink=\\\"/user/{{uid}}/website/{{website._id}}\\\"\\n        class=\\\"float-right\\\"\\n        title=\\\"Edit\\\"\\n      >\\n        <i class=\\\"fas fa-cog\\\"></i>\\n      </a>\\n    </li>\\n  </ul>\\n</div>\\n<!-- Footer -->\\n<footer class=\\\"navbar navbar-dark bg-dark fixed-bottom\\\">\\n  <!-- Navbar content -->\\n  <div class=\\\"full-width\\\">\\n    <a class=\\\"color-white float-right\\\" routerLink=\\\"/user/{{uid}}\\\">\\n      <i class=\\\"fas fa-user\\\"></i>\\n    </a>\\n  </div>\\n</footer>\\n\"","import { Component, OnInit } from \"@angular/core\";\nimport { WebsiteService } from \"src/app/services/website.service.client\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { Website } from \"src/app/models/website.model.client\";\n\n@Component({\n  selector: \"app-website-list\",\n  templateUrl: \"./website-list.component.html\",\n  styleUrls: [\"./website-list.component.css\"]\n})\nexport class WebsiteListComponent implements OnInit {\n  uid: string;\n  websites: Website[];\n  constructor(\n    private websiteservice: WebsiteService,\n    private activatedroute: ActivatedRoute\n  ) {}\n\n  ngOnInit() {\n    this.activatedroute.params.subscribe(params => {\n      (this.uid = params[\"uid\"]),\n        this.websiteservice\n          .findWebsitesByUser(this.uid)\n          .subscribe((websites: Website[]) => {\n            this.websites = websites;\n          });\n    });\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvd2Vic2l0ZS93ZWJzaXRlLW5ldy93ZWJzaXRlLW5ldy5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<!-- Navbar -->\\n<nav class=\\\"navbar navbar-dark bg-dark fixed-top row nav-height\\\">\\n  <!-- Left Nav -->\\n  <div class=\\\"col-4 d-none d-sm-block\\\">\\n    <a class=\\\"color-white\\\" routerLink=\\\"/user/{{uid}}/website\\\">\\n      <i class=\\\"fas fa-chevron-left\\\"></i>\\n    </a>\\n\\n    <a class=\\\"color-white padding-left\\\" routerLink=\\\"/user/{{uid}}/website/new\\\">\\n      <h5 class=\\\"display-inline a-color\\\">Websites</h5>\\n    </a>\\n\\n    <a class=\\\"color-white float-right\\\" routerLink=\\\"/user/{{uid}}/website/new\\\">\\n      <i class=\\\"fas fa-plus\\\"></i>\\n    </a>\\n  </div>\\n  <!-- Right Nav -->\\n  <div class=\\\"col-sm-8\\\">\\n    <a class=\\\"color-white d-sm-none\\\" routerLink=\\\"/user/{{uid}}/website\\\">\\n      <i class=\\\"fas fa-chevron-left\\\"></i>\\n    </a>\\n    <a class=\\\"color-white padding-left\\\" routerLink=\\\"/user/{{uid}}/website/new\\\">\\n      <h5 class=\\\"display-inline a-color\\\">New Website</h5>\\n    </a>\\n    <a class=\\\"color-white float-right\\\" routerLink=\\\"/user/{{uid}}/website\\\">\\n      <i class=\\\"fas fa-check\\\"></i>\\n    </a>\\n  </div>\\n</nav>\\n<!-- list and form -->\\n<div class=\\\"row container-fluid\\\">\\n  <!-- Left list -->\\n  <div class=\\\"col-4 d-none d-sm-block\\\">\\n    <div class=\\\"container div-backgound\\\">\\n      <ul class=\\\"list-group\\\">\\n        <li class=\\\"list-group-item\\\" *ngFor=\\\"let website of websites\\\">\\n          <a routerLink=\\\"/user/{{uid}}/website/{{website.id}}/page\\\">\\n            {{ website.name }}\\n          </a>\\n          <a\\n            class=\\\"float-right\\\"\\n            routerLink=\\\"/user/{{uid}}/website/{{website.id}}\\\"\\n            ><i class=\\\"fas fa-cog\\\"></i\\n          ></a>\\n        </li>\\n      </ul>\\n    </div>\\n  </div>\\n  <!-- Right form -->\\n  <div class=\\\"col-sm-8\\\">\\n    <div class=\\\"container-fluid div-backgound\\\">\\n      <form\\n        (ngSubmit)=\\\"createWebsite()\\\"\\n        id=\\\"myCreateForm\\\"\\n        #myCreateForm=\\\"ngForm\\\"\\n      >\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"name\\\"><b>Name</b></label>\\n          <input\\n            type=\\\"text\\\"\\n            #nameInput=\\\"ngModel\\\"\\n            required\\n            name=\\\"name\\\"\\n            class=\\\"form-control\\\"\\n            placeholder=\\\"Name\\\"\\n            [(ngModel)]=\\\"name\\\"\\n          />\\n        </div>\\n        <div\\n          *ngIf=\\\"nameInput.invalid && nameInput.touched\\\"\\n          class=\\\"alert alert-danger\\\"\\n        >\\n          Name is required\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"description\\\"><b>Description</b></label>\\n          <textarea\\n            type=\\\"text\\\"\\n            #descInput=\\\"ngModel\\\"\\n            required\\n            class=\\\"form-control\\\"\\n            name=\\\"description\\\"\\n            rows=\\\"5\\\"\\n            placeholder=\\\"Describe you website\\\"\\n            [(ngModel)]=\\\"description\\\"\\n          ></textarea>\\n        </div>\\n        <div\\n          *ngIf=\\\"descInput.invalid && descInput.touched\\\"\\n          class=\\\"alert alert-danger\\\"\\n        >\\n          Description is required\\n        </div>\\n        <div class=\\\"float-right\\\">\\n          <button\\n            type=\\\"submit\\\"\\n            class=\\\"btn btn-success float-left\\\"\\n            form=\\\"myCreateForm\\\"\\n            [disabled]=\\\"myCreateForm.invalid\\\"\\n          >\\n            Submit\\n          </button>\\n          <a\\n            routerLink=\\\"/user/{{uid}}/website\\\"\\n            class=\\\"btn btn-warning center-block\\\"\\n            >Cancel</a\\n          >\\n        </div>\\n      </form>\\n    </div>\\n  </div>\\n</div>\\n<!-- Footer -->\\n<footer class=\\\"navbar navbar-dark bg-dark fixed-bottom\\\">\\n  <!-- Navbar content -->\\n  <div class=\\\"full-width\\\">\\n    <a class=\\\"color-white float-right\\\" routerLink=\\\"/user/{{uid}}\\\">\\n      <i class=\\\"fas fa-user\\\"></i>\\n    </a>\\n  </div>\\n</footer>\\n\"","import { Component, OnInit } from \"@angular/core\";\nimport { WebsiteService } from \"src/app/services/website.service.client\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { Website } from \"src/app/models/website.model.client\";\nimport { FormsModule } from \"@angular/forms\";\nimport { NgModule } from \"@angular/core\";\n\n@Component({\n  selector: \"app-website-new\",\n  templateUrl: \"./website-new.component.html\",\n  styleUrls: [\"./website-new.component.css\"]\n})\nexport class WebsiteNewComponent implements OnInit {\n  uid: string;\n  websites;\n  name: string;\n  description: string;\n  submitted = false;\n  error_name: boolean;\n  error_desc: boolean;\n\n  constructor(\n    private websiteservice: WebsiteService,\n    private activatedroute: ActivatedRoute,\n    private router: Router\n  ) {}\n\n  ngOnInit() {\n    this.activatedroute.params.subscribe(params => {\n      (this.uid = params[\"uid\"]),\n        (this.submitted = false),\n        this.websiteservice\n          .findWebsitesByUser(params[\"uid\"])\n          .subscribe((websites: Website) => {\n            this.websites = websites;\n          });\n    });\n  }\n\n  //Create user\n  createWebsite() {\n    const new_website: Website = {\n      name: this.name,\n      description: this.description,\n      developerId: this.uid\n    };\n    this.websiteservice\n      .createWebsite(new_website)\n      .subscribe((website: Website) => {\n        this.router.navigate([\"/user/\" + this.uid + \"/website\"]);\n      });\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvd2lkZ2V0L3dpZGdldC1jaG9vc2VyL3dpZGdldC1jaG9vc2VyLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<!-- Navbar -->\\n<nav class=\\\"navbar-light fixed-top bg-dark\\\">\\n  <a\\n    class=\\\"color-white\\\"\\n    routerLink=\\\"/user/{{uid}}/website/{{wid}}/page/{{pid}}/widget\\\"\\n  >\\n    <i class=\\\"fas fa-chevron-left\\\"></i>\\n  </a>\\n  <a class=\\\"navbar-brand padding-left\\\" href=\\\"#\\\">\\n    <b class=\\\"color-white\\\">Choose Widget</b>\\n  </a>\\n</nav>\\n<!-- List -->\\n<div class=\\\"container\\\">\\n  <ul class=\\\"list-group-flush\\\">\\n    <li class=\\\"list-group-item\\\">\\n      <span (click)=\\\"create('HEADING')\\\" class=\\\"pointer\\\">Heading</span>\\n    </li>\\n    <li class=\\\"list-group-item\\\">\\n      <a routerLink=\\\"/user/{{uid}}/website/{{wid}}/page/{{pid}}/widget/new\\\"\\n        >Label</a\\n      >\\n    </li>\\n    <li class=\\\"list-group-item\\\">\\n      <a routerLink=\\\"/user/{{uid}}/website/{{wid}}/page/{{pid}}/widget/new\\\"\\n        >Text Input</a\\n      >\\n    </li>\\n    <li class=\\\"list-group-item\\\">\\n      <a routerLink=\\\"/user/{{uid}}/website/{{wid}}/page/{{pid}}/widget/new\\\"\\n        >Link</a\\n      >\\n    </li>\\n    <li class=\\\"list-group-item\\\">\\n      <a routerLink=\\\"/user/{{uid}}/website/{{wid}}/page/{{pid}}/widget/new\\\"\\n        >Button</a\\n      >\\n    </li>\\n    <li class=\\\"list-group-item\\\">\\n      <span (click)=\\\"create('IMAGE')\\\" class=\\\"pointer\\\">Image</span>\\n    </li>\\n    <li class=\\\"list-group-item\\\">\\n      <span (click)=\\\"create('YOUTUBE')\\\" class=\\\"pointer\\\">Youtube</span>\\n    </li>\\n    <li class=\\\"list-group-item\\\">\\n      <a routerLink=\\\"/user/{{uid}}/website/{{wid}}/page/{{pid}}/widget/new\\\"\\n        >Data Table</a\\n      >\\n    </li>\\n    <li class=\\\"list-group-item\\\">\\n      <a routerLink=\\\"/user/{{uid}}/website/{{wid}}/page/{{pid}}/widget/new\\\"\\n        >Repeater</a\\n      >\\n    </li>\\n  </ul>\\n</div>\\n<!-- Footer -->\\n<footer class=\\\"navbar navbar-light fixed-bottom bg-dark\\\">\\n  <!-- Navbar content -->\\n  <div class=\\\"full-width\\\">\\n    <a class=\\\"color-white float-right\\\" routerLink=\\\"/user/{{uid}}\\\"\\n      ><i class=\\\"fas fa-user\\\"></i\\n    ></a>\\n  </div>\\n</footer>\\n\"","import { Component, OnInit } from \"@angular/core\";\nimport { Widget } from \"src/app/models/widget.model.client\";\nimport { WidgetService } from \"src/app/services/widget.service.client\";\nimport { Router, ActivatedRoute } from \"@angular/router\";\n\n@Component({\n  selector: \"app-widget-chooser\",\n  templateUrl: \"./widget-chooser.component.html\",\n  styleUrls: [\"./widget-chooser.component.css\"]\n})\nexport class WidgetChooserComponent implements OnInit {\n  uid: string;\n  wid: string;\n  pid: string;\n\n  constructor(\n    private widgetservice: WidgetService,\n    private router: Router,\n    private activatedroute: ActivatedRoute\n  ) {}\n\n  ngOnInit() {\n    this.activatedroute.params.subscribe(params => {\n      (this.uid = params[\"uid\"]),\n        (this.wid = params[\"wid\"]),\n        (this.pid = params[\"pid\"]);\n    });\n  }\n\n  create(type: string) {\n    const widget: Widget = {\n      widgetType: type,\n      pageId: this.pid\n    };\n    //console.log(type);\n\n    this.widgetservice.createWidget(widget).subscribe((widget: Widget) => {\n      this.router.navigate([\n        \"user/\" +\n          this.uid +\n          \"/website/\" +\n          this.wid +\n          \"/page/\" +\n          this.pid +\n          \"/widget/\" +\n          widget._id\n      ]);\n    });\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvd2lkZ2V0L3dpZGdldC1lZGl0L3dpZGdldC1lZGl0LmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div [ngSwitch]=\\\"widget.widgetType\\\">\\n  <div *ngSwitchCase=\\\"'HEADING'\\\"><app-widget-header></app-widget-header></div>\\n  <div *ngSwitchCase=\\\"'IMAGE'\\\"><app-widget-image></app-widget-image></div>\\n  <div *ngSwitchCase=\\\"'YOUTUBE'\\\"><app-widget-youtube></app-widget-youtube></div>\\n</div>\\n\"","import { Component, OnInit } from \"@angular/core\";\nimport { Widget } from \"src/app/models/widget.model.client\";\nimport { WidgetService } from \"src/app/services/widget.service.client\";\nimport { Router, ActivatedRoute } from \"@angular/router\";\n\n@Component({\n  selector: \"app-widget-edit\",\n  templateUrl: \"./widget-edit.component.html\",\n  styleUrls: [\"./widget-edit.component.css\"]\n})\nexport class WidgetEditComponent implements OnInit {\n  uid: string;\n  wgid: string;\n  widget: Widget = {\n    widgetType: \"\",\n    pageId: \"\",\n    text: \"\",\n    size: 0,\n    width: \"\",\n    url: \"\"\n  };\n\n  constructor(\n    private widgetservice: WidgetService,\n    private router: Router,\n    private activatedroute: ActivatedRoute\n  ) {}\n\n  ngOnInit() {\n    this.activatedroute.params.subscribe(params => {\n      this.wgid = params[\"wgid\"];\n      this.widgetservice\n        .findWidgetById(this.wgid)\n        .subscribe((widget: Widget) => {\n          this.widget = widget;\n        });\n    });\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvd2lkZ2V0L3dpZGdldC1lZGl0L3dpZGdldC1oZWFkZXIvd2lkZ2V0LWhlYWRlci5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<!-- Navbar -->\\n<nav class=\\\"navbar navbar-light fixed-top bg-dark\\\">\\n  <a\\n    class=\\\"color-white\\\"\\n    routerLink=\\\"/user/{{uid}}/website/{{wid}}/page/{{pid}}/widget\\\"\\n  >\\n    <i class=\\\"fas fa-chevron-left\\\"></i>\\n  </a>\\n  <div class=\\\"sw-90-width\\\">\\n    <a\\n      class=\\\"navbar-brand\\\"\\n      routerLink=\\\"/user/{{uid}}/website/{{wid}}/page/{{pid}}/widget\\\"\\n    >\\n      <b class=\\\"color-white\\\"> Widget Edit</b>\\n    </a>\\n  </div>\\n\\n  <button\\n    type=\\\"submit\\\"\\n    class=\\\"color-white btn bg-transparent\\\"\\n    form=\\\"myForm\\\"\\n    [disabled]=\\\"myForm.invalid\\\"\\n  >\\n    <i class=\\\"fas fa-check\\\"></i>\\n  </button>\\n</nav>\\n<br /><br />\\n<!-- List -->\\n<div class=\\\"container-fluid\\\">\\n  <form class=\\\"form-style\\\" id=\\\"myForm\\\" (ngSubmit)=\\\"update()\\\" #myForm=\\\"ngForm\\\">\\n    <!--\\n      Name\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"name\\\"><b>Name</b></label>\\n        <input\\n          type=\\\"text\\\"\\n          name=\\\"name\\\"\\n          class=\\\"form-control\\\"\\n          [(ngModel)]=\\\"widget.name\\\"\\n        />\\n      </div>\\n    -->\\n    <!-- Text -->\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"textHeading\\\"><b>Text</b></label>\\n      <input\\n        type=\\\"text\\\"\\n        name=\\\"text\\\"\\n        class=\\\"form-control\\\"\\n        [(ngModel)]=\\\"widget.text\\\"\\n        required\\n        #textInput=\\\"ngModel\\\"\\n      />\\n    </div>\\n    <div\\n      *ngIf=\\\"textInput.invalid && textInput.touched\\\"\\n      class=\\\"alert alert-danger\\\"\\n    >\\n      Text is required\\n    </div>\\n    <!-- Size -->\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"sizeHeading\\\"><b>Size</b></label>\\n      <input\\n        type=\\\"number\\\"\\n        name=\\\"size\\\"\\n        class=\\\"form-control\\\"\\n        [(ngModel)]=\\\"widget.size\\\"\\n        required\\n        #sizeInput=\\\"ngModel\\\"\\n      />\\n    </div>\\n    <div\\n      *ngIf=\\\"sizeInput.invalid && sizeInput.touched\\\"\\n      class=\\\"alert alert-danger\\\"\\n    >\\n      Size is required\\n    </div>\\n\\n    <div>\\n      <button type=\\\"button\\\" class=\\\"btn btn-danger btn-block\\\" (click)=\\\"delete()\\\">\\n        Delete\\n      </button>\\n    </div>\\n  </form>\\n</div>\\n<!-- Footer -->\\n<footer class=\\\"navbar navbar-light fixed-bottom bg-dark\\\">\\n  <!-- Navbar content -->\\n  <div class=\\\"full-width\\\">\\n    <a class=\\\"color-white float-right\\\" routerLink=\\\"/user/{{uid}}\\\"\\n      ><i class=\\\"fas fa-user\\\"></i\\n    ></a>\\n  </div>\\n</footer>\\n\"","import { Component, OnInit } from \"@angular/core\";\nimport { Widget } from \"src/app/models/widget.model.client\";\nimport { WidgetService } from \"src/app/services/widget.service.client\";\nimport { Router, ActivatedRoute } from \"@angular/router\";\n@Component({\n  selector: \"app-widget-header\",\n  templateUrl: \"./widget-header.component.html\",\n  styleUrls: [\"./widget-header.component.css\"]\n})\nexport class WidgetHeaderComponent implements OnInit {\n  uid: string;\n  wid: string;\n  pid: string;\n  wgid: string;\n  widget: Widget = {\n    widgetType: \"\",\n    pageId: \"\",\n    text: \"\",\n    size: 0,\n    width: \"\",\n    url: \"\"\n  };\n\n  constructor(\n    private widgetservice: WidgetService,\n    private router: Router,\n    private activatedroute: ActivatedRoute\n  ) {}\n\n  ngOnInit() {\n    this.activatedroute.params.subscribe(params => {\n      this.uid = params[\"uid\"];\n      this.wid = params[\"wid\"];\n      this.pid = params[\"pid\"];\n      this.wgid = params[\"wgid\"];\n      this.widgetservice\n        .findWidgetById(this.wgid)\n        .subscribe((widget: Widget) => {\n          this.widget = widget;\n        });\n    });\n  }\n  //Update header widget\n  update() {\n    this.widgetservice.updateWidget(this.widget).subscribe(() => {\n      this.router.navigate([\n        \"/user/\" +\n          this.uid +\n          \"/website/\" +\n          this.wid +\n          \"/page/\" +\n          this.pid +\n          \"/widget\"\n      ]);\n    });\n  }\n  //Delete header widget\n  delete() {\n    //console.log(this.wgid);\n    this.widgetservice.deleteWidget(this.wgid).subscribe((del: any) => {\n      this.router.navigate([\n        \"/user/\" +\n          this.uid +\n          \"/website/\" +\n          this.wid +\n          \"/page/\" +\n          this.pid +\n          \"/widget\"\n      ]);\n    });\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvd2lkZ2V0L3dpZGdldC1lZGl0L3dpZGdldC1pbWFnZS93aWRnZXQtaW1hZ2UuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<!-- Navbar -->\\n<nav class=\\\"navbar navbar-light fixed-top bg-dark\\\">\\n  <a\\n    class=\\\"color-white\\\"\\n    routerLink=\\\"/user/{{uid}}/website/{{wid}}/page/{{pid}}/widget\\\"\\n  >\\n    <i class=\\\"fas fa-chevron-left\\\"></i>\\n  </a>\\n  <div class=\\\"sw-90-width\\\">\\n    <a\\n      class=\\\"navbar-brand\\\"\\n      routerLink=\\\"/user/{{uid}}/website/{{wid}}/page/{{pid}}/widget\\\"\\n    >\\n      <b class=\\\"color-white\\\"> Widget Edit</b>\\n    </a>\\n  </div>\\n\\n  <button\\n    type=\\\"submit\\\"\\n    class=\\\"color-white btn bg-transparent\\\"\\n    form=\\\"myForm\\\"\\n    [disabled]=\\\"myForm.invalid\\\"\\n  >\\n    <i class=\\\"fas fa-check\\\"></i>\\n  </button>\\n</nav>\\n<br /><br />\\n<!-- List -->\\n<div class=\\\"container\\\">\\n  <form class=\\\"form-style\\\" id=\\\"myForm\\\" (ngSubmit)=\\\"update()\\\" #myForm=\\\"ngForm\\\">\\n    <!--\\n      Name\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"name\\\"><b>Name</b></label>\\n        <input\\n          type=\\\"text\\\"\\n          name=\\\"name\\\"\\n          class=\\\"form-control\\\"\\n          [(ngModel)]=\\\"widget.name\\\"\\n        />\\n      </div>\\n    -->\\n\\n    <!-- Url -->\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"url\\\"><b>Url</b></label>\\n      <input\\n        type=\\\"text\\\"\\n        name=\\\"url\\\"\\n        class=\\\"form-control\\\"\\n        [(ngModel)]=\\\"widget.url\\\"\\n        #urlInput=\\\"ngModel\\\"\\n        required\\n      />\\n    </div>\\n    <div\\n      *ngIf=\\\"urlInput.invalid && urlInput.touched\\\"\\n      class=\\\"alert alert-danger\\\"\\n    >\\n      Size is required\\n    </div>\\n    <!-- Width -->\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"width\\\"><b>Width</b></label>\\n      <input\\n        type=\\\"text\\\"\\n        name=\\\"width\\\"\\n        id=\\\"width\\\"\\n        class=\\\"form-control\\\"\\n        required\\n        [(ngModel)]=\\\"widget.width\\\"\\n        #widthInput=\\\"ngModel\\\"\\n      />\\n    </div>\\n    <div\\n      *ngIf=\\\"widthInput.invalid && widthInput.touched\\\"\\n      class=\\\"alert alert-danger\\\"\\n    >\\n      Width is required\\n    </div>\\n    <div>\\n      <button type=\\\"button\\\" class=\\\"btn btn-danger btn-block\\\" (click)=\\\"delete()\\\">\\n        Delete\\n      </button>\\n    </div>\\n  </form>\\n</div>\\n<!-- Footer -->\\n<footer class=\\\"navbar navbar-light fixed-bottom bg-dark\\\">\\n  <!-- Navbar content -->\\n  <div class=\\\"full-width\\\">\\n    <a class=\\\"color-white float-right\\\" routerLink=\\\"/user/{{uid}}\\\"\\n      ><i class=\\\"fas fa-user\\\"></i\\n    ></a>\\n  </div>\\n</footer>\\n\"","import { Component, OnInit } from \"@angular/core\";\nimport { Widget } from \"src/app/models/widget.model.client\";\nimport { WidgetService } from \"src/app/services/widget.service.client\";\nimport { Router, ActivatedRoute } from \"@angular/router\";\n@Component({\n  selector: \"app-widget-image\",\n  templateUrl: \"./widget-image.component.html\",\n  styleUrls: [\"./widget-image.component.css\"]\n})\nexport class WidgetImageComponent implements OnInit {\n  uid: string;\n  wid: string;\n  pid: string;\n  wgid: string;\n  widget: Widget = {\n    widgetType: \"\",\n    pageId: \"\",\n    text: \"\",\n    size: 0,\n    width: \"\",\n    url: \"\"\n  };\n  constructor(\n    private widgetservice: WidgetService,\n    private router: Router,\n    private activatedroute: ActivatedRoute\n  ) {}\n\n  ngOnInit() {\n    this.activatedroute.params.subscribe(params => {\n      this.uid = params[\"uid\"];\n      this.wid = params[\"wid\"];\n      this.pid = params[\"pid\"];\n      this.wgid = params[\"wgid\"];\n      this.widgetservice\n        .findWidgetById(this.wgid)\n        .subscribe((widget: Widget) => {\n          this.widget = widget;\n        });\n    });\n  }\n  //Update header widget\n  update() {\n    this.widgetservice.updateWidget(this.widget).subscribe(() => {\n      this.router.navigate([\n        \"/user/\" +\n          this.uid +\n          \"/website/\" +\n          this.wid +\n          \"/page/\" +\n          this.pid +\n          \"/widget\"\n      ]);\n    });\n  }\n  //Delete header widget\n  delete() {\n    this.widgetservice.deleteWidget(this.wgid).subscribe(() => {\n      this.router.navigate([\n        \"/user/\" +\n          this.uid +\n          \"/website/\" +\n          this.wid +\n          \"/page/\" +\n          this.pid +\n          \"/widget\"\n      ]);\n    });\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvd2lkZ2V0L3dpZGdldC1lZGl0L3dpZGdldC15b3V0dWJlL3dpZGdldC15b3V0dWJlLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<!-- Navbar -->\\n<nav class=\\\"navbar navbar-light fixed-top bg-dark\\\">\\n  <a\\n    class=\\\"color-white\\\"\\n    routerLink=\\\"/user/{{uid}}/website/{{wid}}/page/{{pid}}/widget\\\"\\n  >\\n    <i class=\\\"fas fa-chevron-left\\\"></i>\\n  </a>\\n  <div class=\\\"sw-90-width\\\">\\n    <a\\n      class=\\\"navbar-brand\\\"\\n      routerLink=\\\"/user/{{uid}}/website/{{wid}}/page/{{pid}}/widget\\\"\\n    >\\n      <b class=\\\"color-white\\\"> Widget Edit</b>\\n    </a>\\n  </div>\\n\\n  <button\\n    type=\\\"submit\\\"\\n    class=\\\"color-white btn bg-transparent\\\"\\n    form=\\\"myForm\\\"\\n    [disabled]=\\\"myForm.invalid\\\"\\n  >\\n    <i class=\\\"fas fa-check\\\"></i>\\n  </button>\\n</nav>\\n<br /><br />\\n<!-- List -->\\n<div class=\\\"container\\\">\\n  <form class=\\\"form-style\\\" id=\\\"myForm\\\" (ngSubmit)=\\\"update()\\\" #myForm=\\\"ngForm\\\">\\n    <!--\\n      Name\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"name\\\"><b>Name</b></label>\\n        <input\\n          name=\\\"name\\\"\\n          placeholder=\\\"Youtube Name\\\"\\n          [(ngModel)]=\\\"widget.name\\\"\\n          type=\\\"text\\\"\\n          id=\\\"name\\\"\\n          class=\\\"form-control\\\"\\n        />\\n      </div>\\n    -->\\n    <!-- Url -->\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"urlHeading\\\"><b>Url</b></label>\\n      <input\\n        type=\\\"text\\\"\\n        name=\\\"url\\\"\\n        [(ngModel)]=\\\"widget.url\\\"\\n        class=\\\"form-control\\\"\\n        #urlInput=\\\"ngModel\\\"\\n        required\\n      />\\n    </div>\\n    <div\\n      *ngIf=\\\"urlInput.invalid && urlInput.touched\\\"\\n      class=\\\"alert alert-danger\\\"\\n    >\\n      Url is required\\n    </div>\\n    <!-- Width -->\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"width\\\"><b>Width</b></label>\\n      <input\\n        type=\\\"text\\\"\\n        name=\\\"width\\\"\\n        class=\\\"form-control\\\"\\n        [(ngModel)]=\\\"widget.width\\\"\\n        required\\n        #widthInput=\\\"ngModel\\\"\\n      />\\n    </div>\\n    <div\\n      *ngIf=\\\"widthInput.invalid && widthInput.touched\\\"\\n      class=\\\"alert alert-danger\\\"\\n    >\\n      Width is required\\n    </div>\\n    <div>\\n      <button type=\\\"button\\\" class=\\\"btn btn-danger btn-block\\\" (click)=\\\"delete()\\\">\\n        Delete\\n      </button>\\n    </div>\\n  </form>\\n</div>\\n<!-- Footer -->\\n<footer class=\\\"navbar navbar-light fixed-bottom bg-dark\\\">\\n  <!-- Navbar content -->\\n  <div class=\\\"full-width\\\">\\n    <a class=\\\"color-white float-right\\\" routerLink=\\\"/user/{{uid}}\\\"\\n      ><i class=\\\"fas fa-user\\\"></i\\n    ></a>\\n  </div>\\n</footer>\\n\"","import { Component, OnInit } from \"@angular/core\";\nimport { Widget } from \"src/app/models/widget.model.client\";\nimport { WidgetService } from \"src/app/services/widget.service.client\";\nimport { Router, ActivatedRoute } from \"@angular/router\";\n@Component({\n  selector: \"app-widget-youtube\",\n  templateUrl: \"./widget-youtube.component.html\",\n  styleUrls: [\"./widget-youtube.component.css\"]\n})\nexport class WidgetYoutubeComponent implements OnInit {\n  uid: string;\n  wid: string;\n  pid: string;\n  wgid: string;\n  widget: Widget = {\n    widgetType: \"\",\n    pageId: \"\",\n    text: \"\",\n    size: 0,\n    width: \"\",\n    url: \"\"\n  };\n  constructor(\n    private widgetservice: WidgetService,\n    private router: Router,\n    private activatedroute: ActivatedRoute\n  ) {}\n\n  ngOnInit() {\n    // console.log(\"dsfsdfsdfsd\");\n    this.activatedroute.params.subscribe(params => {\n      this.uid = params[\"uid\"];\n      this.wid = params[\"wid\"];\n      this.pid = params[\"pid\"];\n      this.wgid = params[\"wgid\"];\n      this.widgetservice\n        .findWidgetById(this.wgid)\n        .subscribe((widget: Widget) => {\n          this.widget = widget;\n        });\n    });\n  }\n  //Update header widget\n  update() {\n    this.widgetservice.updateWidget(this.widget).subscribe((up: any) => {\n      this.router.navigate([\n        \"/user/\" +\n          this.uid +\n          \"/website/\" +\n          this.wid +\n          \"/page/\" +\n          this.pid +\n          \"/widget\"\n      ]);\n    });\n  }\n  //Delete header widget\n  delete() {\n    this.widgetservice.deleteWidget(this.wgid).subscribe(() => {\n      this.router.navigate([\n        \"/user/\" +\n          this.uid +\n          \"/website/\" +\n          this.wid +\n          \"/page/\" +\n          this.pid +\n          \"/widget\"\n      ]);\n    });\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvd2lkZ2V0L3dpZGdldC1saXN0L3dpZGdldC1saXN0LmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<!-- Navbar -->\\n<nav class=\\\"navbar navbar-light fixed-top bg-dark\\\">\\n  <a class=\\\"color-white\\\" routerLink=\\\"/user/{{uid}}/website/{{wid}}/page\\\">\\n    <i class=\\\"fas fa-chevron-left\\\"></i>\\n  </a>\\n\\n  <div class=\\\"sw-90-width\\\">\\n    <a\\n      class=\\\"navbar-brand\\\"\\n      routerLink=\\\"/user/{{uid}}/website/{{wid}}/page/{{pid}}/widget\\\"\\n    >\\n      <b class=\\\"color-white\\\">Widgets</b>\\n    </a>\\n  </div>\\n  <a\\n    class=\\\"color-white\\\"\\n    routerLink=\\\"/user/{{uid}}/website/{{wid}}/page/{{pid}}/widget/new\\\"\\n  >\\n    <i class=\\\"fas fa-plus\\\"></i>\\n  </a>\\n</nav>\\n<br /><br />\\n<!-- Main content -->\\n<div class=\\\"container-fluid\\\">\\n  <!-- Heading widget -->\\n  <div *ngFor=\\\"let widget of widgets\\\">\\n    <!-- Icons -->\\n    <div class=\\\"absolute-right\\\">\\n      <a\\n        routerLink=\\\"/user/{{uid}}/website/{{wid}}/page/{{pid}}/widget/{{widget._id}}\\\"\\n        class=\\\"color-black\\\"\\n        title=\\\"Edit\\\"\\n      >\\n        <i class=\\\"fas fa-cog\\\"></i>\\n      </a>\\n      <a\\n        routerLink=\\\"/user/{{uid}}/website/{{wid}}/page/{{pid}}/widget/{{widget._id}}\\\"\\n        class=\\\"color-black\\\"\\n      >\\n        <i class=\\\"fas fa-bars\\\"></i>\\n      </a>\\n    </div>\\n    <!-- content -->\\n\\n    <div [ngSwitch]=\\\"widget.widgetType\\\">\\n      <div *ngSwitchCase=\\\"'HEADING'\\\">\\n        <div [ngSwitch]=\\\"widget.size\\\">\\n          <div *ngSwitchCase=\\\"'1'\\\">\\n            <h1>{{ widget.text }}</h1>\\n          </div>\\n          <div *ngSwitchCase=\\\"'2'\\\">\\n            <h2>{{ widget.text }}</h2>\\n          </div>\\n          <div *ngSwitchCase=\\\"'3'\\\">\\n            <h3>{{ widget.text }}</h3>\\n          </div>\\n          <div *ngSwitchCase=\\\"'4'\\\">\\n            <h4>{{ widget.text }}</h4>\\n          </div>\\n          <div *ngSwitchCase=\\\"'5'\\\">\\n            <h5>{{ widget.text }}</h5>\\n          </div>\\n          <div *ngSwitchCase=\\\"'6'\\\">\\n            <h6>{{ widget.text }}</h6>\\n          </div>\\n        </div>\\n      </div>\\n      <div *ngSwitchCase=\\\"'IMAGE'\\\">\\n        <div>\\n          <img\\n            [style.height]=\\\"500\\\"\\n            [src]=\\\"widget.url\\\"\\n            [style.width]=\\\"widget.width\\\"\\n          />\\n        </div>\\n      </div>\\n      <br />\\n      <div *ngSwitchCase=\\\"'YOUTUBE'\\\">\\n        <div class=\\\"embed-responsive embed-responsive-16by9\\\">\\n          <iframe\\n            [src]=\\\"parseYoutubeSrc(widget.url)\\\"\\n            [style.width]=\\\"widget.width\\\"\\n            allowfullscreen\\n          ></iframe>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n<!-- Footer -->\\n<footer class=\\\"navbar navbar-dark bg-dark fixed-bottom\\\">\\n  <!-- Navbar content -->\\n  <a class=\\\"color-white\\\" routerLink=\\\"/user/{{uid}}\\\">\\n    <i class=\\\"fas fa-play\\\"></i>\\n  </a>\\n\\n  <div class=\\\"sw-90-width\\\">\\n    <a\\n      class=\\\"float-left color-white\\\"\\n      routerLink=\\\"/user/{{uid}}/website/{{wid}}/page/{{pid}}/widget\\\"\\n    >\\n      <i class=\\\"fas fa-eye\\\"></i>\\n    </a>\\n  </div>\\n\\n  <a class=\\\"color-white float-right\\\" routerLink=\\\"/user/{{uid}}\\\">\\n    <i class=\\\"fas fa-user\\\"></i>\\n  </a>\\n</footer>\\n\"","import { Component, OnInit } from \"@angular/core\";\nimport { WidgetService } from \"src/app/services/widget.service.client\";\nimport { Widget } from \"src/app/models/widget.model.client\";\nimport { Router, ActivatedRoute } from \"@angular/router\";\nimport { DomSanitizer } from \"@angular/platform-browser\";\n\n@Component({\n  selector: \"app-widget-list\",\n  templateUrl: \"./widget-list.component.html\",\n  styleUrls: [\"./widget-list.component.css\"]\n})\nexport class WidgetListComponent implements OnInit {\n  uid: string;\n  wid: string;\n  pid: string;\n  widgets: Widget[];\n  constructor(\n    private widgetsevice: WidgetService,\n    private router: Router,\n    private activatedroute: ActivatedRoute,\n    private sanitizer: DomSanitizer\n  ) {}\n\n  ngOnInit() {\n    this.activatedroute.params.subscribe(params => {\n      (this.uid = params[\"uid\"]),\n        (this.wid = params[\"wid\"]),\n        (this.pid = params[\"pid\"]),\n        this.widgetsevice\n          .findWidgetsByPageId(this.pid)\n          .subscribe((widgets: Widget[]) => {\n            this.widgets = widgets;\n          });\n    });\n  }\n\n  parseYoutubeSrc(src) {\n    //   Transfer video url into embeded video url\n    let embedUrl: string = \"https://www.youtube.com/embed/\";\n    const splitUrl: string[] = src.split(\"/\");\n    embedUrl += splitUrl[splitUrl.length - 1];\n\n    // Telling browser this src is safe\n    return this.sanitizer.bypassSecurityTrustResourceUrl(embedUrl);\n  }\n}\n","import { Injectable } from \"@angular/core\";\r\nimport { CanActivate, Router } from \"@angular/router\";\r\nimport { UserService } from \"./user.service.client\";\r\n\r\n@Injectable()\r\nexport class AdminGuardService implements CanActivate {\r\n  constructor(private userservice: UserService) {}\r\n\r\n  canActivate() {\r\n    return this.userservice.adminLoggedIn();\r\n  }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { CanActivate, Router } from \"@angular/router\";\r\nimport { UserService } from \"./user.service.client\";\r\n\r\n@Injectable()\r\nexport class AuthGuardSevice implements CanActivate {\r\n  constructor(private userservice: UserService) {}\r\n\r\n  canActivate() {\r\n    return this.userservice.loggedIn();\r\n  }\r\n}\r\n","import { Page } from \"../models/page.model.client\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { Http, Response } from \"@angular/http\";\r\nimport { map } from \"rxjs/operators\";\r\nimport { environment } from \"src/environments/environment\";\r\n\r\n@Injectable()\r\nexport class PageService {\r\n  constructor(private http: Http) {}\r\n  baseUrl = environment.baseUrl;\r\n  //Function to create a page\r\n  createPage(page: Page) {\r\n    const url = this.baseUrl + \"/api/page\";\r\n    return this.http.post(url, page).pipe(\r\n      map((res: Response) => {\r\n        return res.json();\r\n      })\r\n    );\r\n  }\r\n\r\n  //Function to find a page by website Id\r\n  findPagesByWebsiteId(websiteId: string) {\r\n    const url = this.baseUrl + \"/api/website/\" + websiteId + \"/page\";\r\n    return this.http.get(url).pipe(\r\n      map((res: Response) => {\r\n        return res.json();\r\n      })\r\n    );\r\n  }\r\n  //Function to find a page by page Id\r\n  findPageById(pageId: string) {\r\n    const url = this.baseUrl + \"/api/page/\" + pageId;\r\n    return this.http.get(url).pipe(\r\n      map((res: Response) => {\r\n        return res.json();\r\n      })\r\n    );\r\n  }\r\n  //Funtion to update a page\r\n  updatePage(page: Page) {\r\n    const url = this.baseUrl + \"/api/page\";\r\n    return this.http.put(url, page).pipe(\r\n      map((res: Response) => {\r\n        return res.json();\r\n      })\r\n    );\r\n  }\r\n  //Funtion to delete a page by page Id\r\n  deletePage(pageId: string) {\r\n    const url = this.baseUrl + \"/api/page/\" + pageId;\r\n    return this.http.delete(url).pipe(\r\n      map((res: Response) => {\r\n        return res.json();\r\n      })\r\n    );\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\n@Injectable()\r\n\r\nexport class SharedService {\r\n    user: any;\r\n}","import { del } from \"selenium-webdriver/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { environment } from \"src/environments/environment\";\r\nimport { Http, Response, RequestOptions } from \"@angular/http\";\r\nimport { map } from \"rxjs/operators\";\r\nimport { SharedService } from \"./shared.service.client\";\r\nimport { Router } from \"@angular/router\";\r\nimport { User } from \"../models/user.model.client\";\r\n\r\n@Injectable()\r\nexport class UserService {\r\n  constructor(\r\n    private http: Http,\r\n    private router: Router,\r\n    private sharedservice: SharedService\r\n  ) {}\r\n  baseUrl = environment.baseUrl;\r\n  options = new RequestOptions();\r\n\r\n  //Function to create new user\r\n  createUser(user: any) {\r\n    const url = this.baseUrl + \"/api/user\";\r\n    return this.http.post(url, user).pipe(\r\n      map((res: Response) => {\r\n        return res.json();\r\n      })\r\n    );\r\n  }\r\n  //Function to find user id\r\n  findUserById(userId: string) {\r\n    const url = this.baseUrl + \"/api/user/\" + userId;\r\n    return this.http.get(url).pipe(\r\n      map((res: Response) => {\r\n        console.log(res);\r\n        return res.json();\r\n      })\r\n    );\r\n  }\r\n  //Function to find user by username\r\n  findUserByUsername(username: string) {\r\n    //const url = this.baseUrl + \"/api/user/username/\" + username;\r\n    const url = this.baseUrl + \"/api/user?username=\" + username;\r\n    return this.http.get(url).pipe(\r\n      map((res: Response) => {\r\n        return res.json();\r\n      })\r\n    );\r\n  }\r\n\r\n  //Function to find user by username\r\n  findUserByCredentials(username: string, password: string) {\r\n    const url =\r\n      this.baseUrl + \"/api/user?username=\" + username + \"&password=\" + password;\r\n    return this.http.get(url).pipe(\r\n      map((res: Response) => {\r\n        return res.json();\r\n      })\r\n    );\r\n  }\r\n  //Function to update a user\r\n  updateUser(user) {\r\n    const url = this.baseUrl + \"/api/user\";\r\n    return this.http.put(url, user).pipe(\r\n      map((res: Response) => {\r\n        return res.json();\r\n      })\r\n    );\r\n  }\r\n  //Function to delete a user\r\n  deleteUser(userId) {}\r\n\r\n  login(username: string, password: string) {\r\n    this.options.withCredentials = true;\r\n\r\n    const url = this.baseUrl + \"/api/login\";\r\n    const user = {\r\n      username: username,\r\n      password: password\r\n    };\r\n\r\n    return this.http.post(url, user, this.options).pipe(\r\n      map((res: Response) => {\r\n        return res.json();\r\n      })\r\n    );\r\n  }\r\n  //\r\n  loggedIn() {\r\n    this.options.withCredentials = true;\r\n    return this.http\r\n      .post(this.baseUrl + \"/api/loggedIn\", \"\", this.options)\r\n      .pipe(\r\n        map((res: Response) => {\r\n          const user = res.json();\r\n          console.log(user);\r\n          if (user !== 0) {\r\n            this.sharedservice.user = user; // setting user so as to share with all components\r\n            return true;\r\n          } else {\r\n            this.router.navigate([\"/login\"]);\r\n            return false;\r\n          }\r\n        })\r\n      );\r\n  }\r\n  //\r\n  logout() {\r\n    this.options.withCredentials = true;\r\n    const url = this.baseUrl + \"/api/logout\";\r\n    return this.http.post(url, \"\", this.options).pipe(\r\n      map((res: Response) => {\r\n        this.sharedservice.user = 0;\r\n        return res;\r\n      })\r\n    );\r\n  }\r\n  register(user: User) {\r\n    // this communication will be secured\r\n    this.options.withCredentials = true;\r\n    const url = this.baseUrl + \"/api/register\";\r\n    return this.http.post(url, user, this.options).pipe(\r\n      map((res: Response) => {\r\n        return res.json();\r\n      })\r\n    );\r\n  }\r\n  adminLoggedIn() {\r\n    this.options.withCredentials = true;\r\n    return this.http\r\n      .post(this.baseUrl + \"/api/loggedIn\", \"\", this.options)\r\n      .pipe(\r\n        map((res: Response) => {\r\n          const user = res.json();\r\n          if (user !== 0 && user.admin) {\r\n            return true;\r\n          } else {\r\n            this.router.navigate([\"/profile\"]);\r\n            return false;\r\n          }\r\n        })\r\n      );\r\n  }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { Website } from \"../models/website.model.client\";\r\nimport { Http, Response } from \"@angular/http\";\r\nimport { map } from \"rxjs/operators\";\r\nimport { environment } from \"src/environments/environment\";\r\n\r\n@Injectable()\r\nexport class WebsiteService {\r\n  constructor(private http: Http) {}\r\n  baseUrl = environment.baseUrl;\r\n  //Function to create a website\r\n  createWebsite(website: Website) {\r\n    const url = this.baseUrl + \"/api/website\";\r\n    return this.http.post(url, website).pipe(\r\n      map((res: Response) => {\r\n        return res.json();\r\n      })\r\n    );\r\n  }\r\n  //Function to find websites by userId\r\n  findWebsitesByUser(userId: string) {\r\n    const url = this.baseUrl + \"/api/user/\" + userId + \"/website\";\r\n    return this.http.get(url).pipe(\r\n      map((res: Response) => {\r\n        return res.json();\r\n      })\r\n    );\r\n  }\r\n  //Function to find website by website id\r\n  findWebsiteById(websiteId: string) {\r\n    const url = this.baseUrl + \"/api/website/\" + websiteId;\r\n    return this.http.get(url).pipe(\r\n      map((res: Response) => {\r\n        return res.json();\r\n      })\r\n    );\r\n  }\r\n  //Function to update a website\r\n  updateWebsite(website: Website) {\r\n    const url = this.baseUrl + \"/api/website\";\r\n    return this.http.put(url, website).pipe(\r\n      map((res: Response) => {\r\n        return res.json();\r\n      })\r\n    );\r\n  }\r\n  //Function to delete a website\r\n  deleteWebsite(websiteId: string) {\r\n    const url = this.baseUrl + \"/api/website/\" + websiteId;\r\n    //const url = this.baseUrl + \"/api/website/\" + websiteId;\r\n    return this.http.delete(url).pipe(\r\n      map((res: Response) => {\r\n        return res.json();\r\n      })\r\n    );\r\n  }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { Widget } from \"../models/widget.model.client\";\r\nimport { Http, Response } from \"@angular/http\";\r\nimport { map } from \"rxjs/operators\";\r\nimport { environment } from \"src/environments/environment\";\r\n\r\n// injecting service into module\r\n@Injectable()\r\nexport class WidgetService {\r\n  baseUrl = environment.baseUrl;\r\n  constructor(private http: Http) {}\r\n  //Function to create a widget\r\n  createWidget(widget: Widget) {\r\n    const url = this.baseUrl + \"/api/widget\";\r\n    return this.http.post(url, widget).pipe(\r\n      map((res: Response) => {\r\n        //console.log(res.json());\r\n        return res.json();\r\n      })\r\n    );\r\n  }\r\n  //Function to find a widget by page Id\r\n  findWidgetsByPageId(pageId: string) {\r\n    const url = this.baseUrl + \"/api/page/\" + pageId + \"/widget\";\r\n    return this.http.get(url).pipe(\r\n      map((res: Response) => {\r\n        return res.json();\r\n      })\r\n    );\r\n  }\r\n  //Function to find a widget by widget Id\r\n  findWidgetById(widgetId: string) {\r\n    const url = this.baseUrl + \"/api/widget/\" + widgetId;\r\n    return this.http.get(url).pipe(\r\n      map((res: Response) => {\r\n        return res.json();\r\n      })\r\n    );\r\n  }\r\n  //Function to update a widget\r\n  updateWidget(widget: Widget) {\r\n    const url = this.baseUrl + \"/api/widget\";\r\n    return this.http.put(url, widget).pipe(\r\n      map((res: Response) => {\r\n        return res.json();\r\n      })\r\n    );\r\n  }\r\n  //Function to delete a widget\r\n  deleteWidget(widgetId: string) {\r\n    const url = this.baseUrl + \"/api/widget/\" + widgetId;\r\n    return this.http.delete(url).pipe(\r\n      map((res: Response) => {\r\n        return res.json();\r\n      })\r\n    );\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  baseUrl: \"http://localhost:3200\"\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from \"@angular/core\";\nimport { platformBrowserDynamic } from \"@angular/platform-browser-dynamic\";\n\nimport { AppModule } from \"./app/app.module\";\nimport { environment } from \"./environments/environment\";\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic()\n  .bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}